library(tidyverse)
library(viridis)
library(ggridges)
library(magrittr)
options(pillar.sigfig = 6)
setwd("~/unb/me1")
prova_brasil <- read_rds("dados.rds")
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
# Função para gerar o esperado / observado
ad <- function(data, breaks) {
obs <- table(cut(data, breaks))
for(i in 1:length(breaks)-1) {
ei[i] <- (pnorm(breaks[i+1], mean(data), sd(data)) - (pnorm(breaks[i], mean(data), sd(data)))) * length(data)
}
ei[1] <- pnorm(breaks[2], mean(data), sd(data))* length(data)
ei[length(ei)] <- (1 - pnorm(breaks[length(breaks)-1], mean(data), sd(data))) * length(data)
return(data.frame(obs, ei))
}
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
# Função para gerar o esperado / observado
ad <- function(data, breaks) {
obs <- table(cut(data, breaks))
ei <- vector()
for(i in 1:length(breaks)-1) {
ei[i] <- (pnorm(breaks[i+1], mean(data), sd(data)) - (pnorm(breaks[i], mean(data), sd(data)))) * length(data)
}
ei[1] <- pnorm(breaks[2], mean(data), sd(data))* length(data)
ei[length(ei)] <- (1 - pnorm(breaks[length(breaks)-1], mean(data), sd(data))) * length(data)
return(data.frame(obs, ei))
}
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
ad_lp
chisq.test(ad[2:3])
ad[2:3]
ad[2,3]
ad_lp[2:3]
chisq.test(ad_lp[2:3])
reg_adm <- table(prova_brasil$ADM, prova_brasil$REG)
reg_adm
e = 0
# Estatística do Teste:
for(i in 1:length(ad_lp[2])){
e = e + ((ad_lp[2][i] - ad_lp[3][i])**2)/ad_lp[3][i]
}
e
ad_lp[2][2]
ad_lp[2]
ad_lp[2][1]
ad_lp[2][2]
ad_lp[1][2]
# Estatística do Teste:
for(i in 1:length(ad_lp[2])){
e = e + ((ad_lp$Freq[i] - ad_lp$ei[i])**2)/ad_lp$ei[i]
}
e = 0
# Estatística do Teste:
for(i in 1:length(ad_lp[2])){
e = e + ((ad_lp$Freq[i] - ad_lp$ei[i])**2)/ad_lp$ei[i]
}
e
# Estatística do Teste:
chisq.test(ad_lp[2:3])
chisq.test(ad_lp$Freq, ad_lp$ei)
ad_lp
ad_lp[2:3]
# Estatística do Teste:
chisq.test(ad_lp$Freq, y = ad_lp$ei)
?chisq.test
# Função para gerar o esperado / observado
ad <- function(data, breaks) {
obs <- table(cut(data, breaks))
ei <- vector()
p <- vector()
for(i in 1:length(breaks)-1) {
p[i] <- (pnorm(breaks[i+1], mean(data), sd(data)) - (pnorm(breaks[i], mean(data), sd(data))))
}
p[1] <- pnorm(breaks[2], mean(data), sd(data))
p[length(ei)] <- (1 - pnorm(breaks[length(breaks)-1], mean(data), sd(data)))
ei = p * length(data)
return(data.frame(obs, ei))
}
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
ad_lp
# Função para gerar o esperado / observado
ad <- function(data, breaks) {
obs <- table(cut(data, breaks))
ei <- vector()
p <- vector()
for(i in 1:length(breaks)-1) {
p[i] <- (pnorm(breaks[i+1], mean(data), sd(data)) - (pnorm(breaks[i], mean(data), sd(data))))
}
p[1] <- pnorm(breaks[2], mean(data), sd(data))
p[length(ei)] <- (1 - pnorm(breaks[length(breaks)-1], mean(data), sd(data)))
ei = p * length(data)
return(data.frame(obs, ei, p))
}
ad_lp
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
ad_lp
# Estatística do Teste:
chisq.test(ad_lp$Freq, p = ad_lp$p)
sum(ad_lp$p)
pnorm(140, mean(prova_brasil$NOTA_LP), sd(prova_brasil$NOTA_LP))
pnorm(240, mean(prova_brasil$NOTA_LP), sd(prova_brasil$NOTA_LP))
1 - pnorm(240, mean(prova_brasil$NOTA_LP), sd(prova_brasil$NOTA_LP))
seq(130, 250, 10)
seq(130, 250, 10)[12]
# Função para gerar o esperado / observado
ad <- function(data, breaks) {
obs <- table(cut(data, breaks))
ei <- vector()
p <- vector()
for(i in 1:length(breaks)-1) {
p[i] <- (pnorm(breaks[i+1], mean(data), sd(data)) - (pnorm(breaks[i], mean(data), sd(data))))
}
p[1] <- pnorm(breaks[2], mean(data), sd(data))
p[length(p)] <- (1 - pnorm(breaks[length(breaks)-1], mean(data), sd(data)))
ei = p * length(data)
return(data.frame(obs, ei, p))
}
ad_lp <- ad(prova_brasil$NOTA_LP, seq(130,250,10))
# Estatística do Teste:
chisq.test(ad_lp$Freq, p = ad_lp$p)
chisq.test(ad_lp$Freq, p = ad_lp$p, simulate.p.value = TRUE)
chisq.test(ad_lp$Freq, p = ad_lp$p, simulate.p.value = TRUE)
chisq.test(ad_lp$Freq, p = ad_lp$p, simulate.p.value = TRUE)
chisq.test(ad_lp$Freq, p = ad_lp$p, simulate.p.value = TRUE, B = 10000)
# Estatística do Teste:
chisq.test(ad_lp$Freq, p = ad_lp$p)
ad_lp
length(ad_lp$Freq)
sum(ad_lp$p)
# Estatística do Teste:
chi = 0
for(i in 1:length(ad_lp$Freq)){
chi = chi + ((ad_lp$Freq[i] - ad_lp$ei[i])**2)/ad_lp$ei[i]
}
# Estatística do Teste: Chi2 = 5.9673
# p-valor:
pchisq(5.9673, 9)
# Estatística do Teste: Chi2 = 5.9673
# p-valor:
pchisq(5.9673, 11)
# Estatística do Teste: Chi2 = 5.9673
# p-valor:
1 - pchisq(5.9673, 9)
# Estatística do Teste: Chi2 = 5.9673
# p-valor:
1 - pchisq(5.9673, 11)
# Região Crítica:
qchisq(0.95, 9)
# MT
prova_brasil %>%
mutate(NOTA_MT = cut(NOTA_MT,breaks = seq(130,280,25))) %>%
count(NOTA_MT) %>%
ggplot() +
geom_bar(aes(NOTA_MT, n, fill = n), stat="identity") +
scale_fill_viridis(direction = 1) +
labs(x = "Nota", y = "FrequÃªncia", title = "n = 200") +
theme(legend.position = 'hide')
summary(prova_brasil$NOTA_MT)
ad_mt <- ad(prova_brasil$NOTA_MT, seq(130,280,15))
ad_mt
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p)
# Estatística do Teste: Chi2 = 5.9673
# p-valor: 0.7431865
1 - pchisq(10.159, 7)
# MT
prova_brasil %>%
mutate(NOTA_MT = cut(NOTA_MT,breaks = seq(130,280,15))) %>%
count(NOTA_MT) %>%
ggplot() +
geom_bar(aes(NOTA_MT, n, fill = n), stat="identity") +
scale_fill_viridis(direction = 1) +
labs(x = "Nota", y = "FrequÃªncia", title = "n = 200") +
theme(legend.position = 'hide')
# Teste de Aderência
# LP
prova_brasil %>%
mutate(NOTA_LP = cut(NOTA_LP,breaks = seq(130,250,10))) %>%
count(NOTA_LP) %>%
ggplot() +
geom_bar(aes(NOTA_LP, n, fill = n), stat="identity") +
scale_fill_viridis(direction = 1) +
labs(x = "Nota", y = "FrequÃªncia", title = "n = 200") +
theme(legend.position = 'hide', axis.text.x = element_text(size = 7))
# MT
prova_brasil %>%
mutate(NOTA_MT = cut(NOTA_MT,breaks = seq(130,280,5))) %>%
count(NOTA_MT) %>%
ggplot() +
geom_bar(aes(NOTA_MT, n, fill = n), stat="identity") +
scale_fill_viridis(direction = 1) +
labs(x = "Nota", y = "FrequÃªncia", title = "n = 200") +
theme(legend.position = 'hide')
ad_mt <- ad(prova_brasil$NOTA_MT, seq(130,280,5))
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p)
ad_mt <- ad(prova_brasil$NOTA_MT, seq(130,280,10))
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p)
ad_mt <- ad(prova_brasil$NOTA_MT, seq(130,280,10))
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p)
ad_mt
# MT
prova_brasil %>%
mutate(NOTA_MT = cut(NOTA_MT,breaks = seq(130,280,10))) %>%
count(NOTA_MT) %>%
ggplot() +
geom_bar(aes(NOTA_MT, n, fill = n), stat="identity") +
scale_fill_viridis(direction = 1) +
labs(x = "Nota", y = "FrequÃªncia", title = "n = 200") +
theme(legend.position = 'hide')
chisq2 <- function(vec, expec){
chisq = 0
for(i in 1:length(vec)){
chisq = chisq + ((vec[i] - expec[i])**2)/expec[i]
}
return(chisq)
}
# Estatística do Teste: Chi2 = 5.9673
chisq2(ad_lp$Freq, ad_lp$ei)
# Estatística do Teste: Chi2 = 10.159
chisq2(ad_mt$Freq, ad_mt$ei)
ad_mt
# Estatística do Teste: Chi2 = 12.159
chisq2(ad_mt$Freq, ad_mt$ei)
# p-valor: 0.1797407
1 - pchisq(12.159, 12)
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p)
# p-valor: 0.1797407
1 - pchisq(12.159, 14)
# Estatística do Teste: Chi2 = 12.159
chisq2(ad_mt$Freq, ad_mt$ei)
# p-valor: 0.1797407
1 - pchisq(12.159, 12)
# H_0: Os dados se ajustam ao modelo
# <=> p1 = p10, p2 = p20, ps = ps0
# h_1: pj =/= pj0 para pelo menos um j
chisq.test(ad_mt$Freq, p = ad_mt$p, correct = TRUE)
?chisq.test
?htest
