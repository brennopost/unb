geom_density_ridges()
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges() + theme_ridges()
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges()
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges(scale = 4) + theme_ridges()
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges(scale = 4) + theme_ridges() +
install.packages("ggridges")
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges(scale = 4) + theme_ridges() +
scale_y_discrete(expand = c(0.01, 0))
ggplot(prova_brasil, aes(NOTA_MT, LOCAL)) +
geom_density_ridges(scale = 4) + theme_ridges() +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0))
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A")
table(prova_brasil$REG, prova_brasil$ADM)
reg_adm <- table(prova_brasil$REG, prova_brasil$ADM)
# Teste de Independência
chisq.test(reg_adm)
reg_adm <- table(prova_brasil$ADM, prova_brasil$REG)
reg_adm
count(prova_brasil, REG)
count(prova_brasil, ADM)
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
geom_raster(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
#geom_raster(aes(fill = n)) +
geom_count(fill = n) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
#geom_raster(aes(fill = n)) +
geom_count(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
geom_raster(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
geom_rect(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(REG, ADM) %>%
ggplot(aes(REG, ADM)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A")
# Teste de Independência
chisq.test(reg_adm)
xtabs(prova_brasil$ADM ~~ prova_brasil$REG)
xtabs(prova_brasil$ADM ~ prova_brasil$REG)
xtabs(ADM ~ REG, prova_brasil)
xtabs(ADM ~ REG, data=prova_brasil)
xtabs(~REG+ADM, data=prova_brasil)
xtab<-xtabs(~REG+ADM, data=prova_brasil)
xtab
ftable(xtab)
summart(xtab)
summary(xtab)
# Frequência Experada:
q <- data.frame()
q
# Frequência Experada:
q <- data.frame(c(1,2,3), c(12, 17, 24))
q
reg_adm
lenght(reg_adm)
length(reg_adm)
row(reg_adm)
nrow(reg_adm)
ncol(reg_adm)
# Frequência Experada:
table2 <- function(data) {
exp_data < data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
}
table(reg_adm)
table2(reg_adm)
exp_data <- data.frame()
# Frequência Experada:
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
}
table2(reg_adm)
# Frequência Experada:
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
return(exp_data)
}
table2(reg_adm)
k <- table2(reg_adm)
k
row.names(k)
row.names(k) <- row.names(data)
row.names(k) <- row.names(reg_adm)
k
col.names(exp_data) <- col.names(data)
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
row.names(exp_data) <- row.names(data)
col.names(exp_data) <- col.names(data)
return(exp_data)
}
colnames(k) <- colnames(reg_adm)
k
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
rownames(exp_data) <- rownames(data)
colnames(exp_data) <- colnames(data)
return(exp_data)
}
# Frequência Experada:
table2(reg_adm)
table(reg_adm)
table(reg_adm)[1]
table(reg_adm)[,1]
table(reg_adm)
as.vector(reg_adm)
as.vector(reg_adm)[1]
# Função para calcular o Χ²
chisq <- function(data){
vec <- as.vector(data)
expec <- as.vector(table2(data))
chisq = 0
for(i in 1:length(vec)){
chisq = chisq + ((vec[i] - expec[i])**2)/expec[i]
}
return(chisq)
}
chisq(reg_adm)
as.vector(table2(reg_adm))
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
rownames(exp_data) <- rownames(data)
colnames(exp_data) <- colnames(data)
return(table(exp_data))
}
as.vector(table2(reg_adm))
table2(reg_adm)
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
rownames(exp_data) <- rownames(data)
colnames(exp_data) <- colnames(data)
return(exp_data)
}
table2 <- function(data) {
exp_data <- data.frame()
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
return(data)
}
table2(reg_adm)
as.vector(table2(reg_adm))
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
return(exp_data)
}
as.vector(table2(reg_adm))
table2(reg_adm)
# Função para a frequência experada
table2 <- function(data) {
exp_data <- data
for (i in 1:nrow(data)){
for(j in 1:ncol(data)){
# Makes row i and column j into the expected value
exp_data[i,j] <- (sum(data[i,]) * sum(data[,j])) / sum(data)
}
}
return(exp_data)
}
# Função para calcular o Χ²
chisq <- function(data){
vec <- as.vector(data)
expec <- as.vector(table2(data))
chisq = 0
for(i in 1:length(vec)){
chisq = chisq + ((vec[i] - expec[i])**2)/expec[i]
}
return(chisq)
}
chisq(reg_adm)
chisq.test(reg_adm)
# Estatística do Teste: 11.24391
chisq(reg_adm)
# Região Crítica:
dchisq(0.05, 4)
# Região Crítica: 1,740074
dchisq(0.05, 1)
# Região Crítica:
dchisq(0.05, 2)
# Região Crítica:
dchisq(0.05, df = 1)
# Região Crítica:
dchisq(0.05, 4)
# Região Crítica:
dchisq(0.5, 4)
dchisq()
?dchisq
# Região Crítica: 1,740074 /
qchisq(0.05, 1)
# Região Crítica: 1.740074
qchisq(0.05, 1)
# Região Crítica:
qchisq(0.05, 4)
# p-valor:
pchisq(chisq(reg_adm), 4)
chisq.test(reg_adm)
# p-valor:
1 - pchisq(chisq(reg_adm), 4)
# Estatística do Teste: 0,1151
# p-valor: 0.7344109
1 - pchisq(0.1151, 1)
# p-valor: 0.02395535
1 - pchisq(chisq(reg_adm), 4)
# Região Crítica: 0.710723
qchisq(0.95, 4)
pchisq(chisq(reg_adm), 4)
# Região Crítica: 9.487729
qchisq(0.975, 4)
# Região Crítica: 0.00393214
qchisq(0.95, 1)
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_point()
prova_brasil %>%
count(REG, ADM)
tam <- table(prova_brasil$TAM_ESCOLA, prova_brasil$TAM_MUN)
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count()
tam
# Teste de Independência
chisq.test(tam)
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count()
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A")
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "A") +
coord_flip()
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "D") +
coord_flip()
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
#scale_fill_viridis(option = "D") +
coord_flip()
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "E") +
coord_flip()
tam
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count()
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "E") +
coord_flip()
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") +
ggplot(aes(TAM_ESCOLA)) + geom_bar()
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") %>%
ggplot(aes(TAM_ESCOLA)) + geom_bar()
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") %>%
count(TAM_ESCOLA)
ggplot(aes(TAM_ESCOLA, n, fill = n)) + geom_bar(stat="identity")
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") %>%
count(TAM_ESCOLA) %>%
ggplot(aes(TAM_ESCOLA, n, fill = n)) + geom_bar(stat="identity")
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") %>%
count(TAM_ESCOLA) %>%
ggplot(aes(TAM_ESCOLA, n, fill = n)) + geom_bar(stat="identity") + scale_fill_viridis(option = "E")
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "E") +
coord_flip()
prova_brasil %>%
filter(TAM_MUN == "50000 a 99999 hab") %>%
count(TAM_ESCOLA) %>%
ggplot(aes(TAM_ESCOLA, n, fill = n)) + geom_bar(stat="identity") + scale_fill_viridis(option = "E")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA))
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_MUN, ..density..)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_MUN, ..density..)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge", stat = "identity")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = position_dodge())
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = position_dodge(2))
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = position_dodge(0.5))
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TEM_ESCOLA)) +
geom_bar(aes(fill = TAM_MUN), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_ESCOLA)) +
geom_bar(aes(fill = TAM_MUN), position = "dodge")
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(fill = n))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(fill = n))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(fill = ..count..))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count()
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(fill = n))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(fill = ..n..))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(color = ..n..))
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(color = ..n..)) +
scale_fill_viridis(option = "E")
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(color = ..n..)) +
scale_color_viridis(option = "E")
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(color = ..n..)) +
scale_color_viridis(option = "A")
prova_brasil %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = n)) +
scale_fill_viridis(option = "E") +
coord_flip()
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA)
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA) %>%
summarise(n = n())
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA) %>%
summarise(prop = sum(TAM_ESCOLA)/ n())
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA) %>%
summarise(n =  n()) %>%
mutate( freq = n / sum(n))
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA) %>%
summarise(n =  n()) %>%
mutate( freq = n / sum(n)) %>%
count(TAM_ESCOLA, TAM_MUN) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = freq)) +
scale_fill_viridis(option = "E") +
coord_flip()
prova_brasil %>%
group_by(TAM_MUN, TAM_ESCOLA) %>%
summarise(n =  n()) %>%
mutate( freq = n / sum(n)) %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN)) +
geom_tile(aes(fill = freq)) +
scale_fill_viridis(option = "E") +
coord_flip()
prova_brasil %>%
ggplot(aes(TAM_ESCOLA, TAM_MUN))+
geom_count(aes(color = ..n..)) +
scale_color_viridis(option = "A")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")
prova_brasil %>%
ggplot(aes(TAM_MUN)) +
geom_bar(aes(fill = TAM_ESCOLA), position = "dodge")+
scale_fill_viridis_d()
# Teste de Independência
chisq.test(tam)
# Frequências Relativas:
table2(tam)
# Estatística do Teste:
chisq(tam)
# p-valor:
pchisq(chisq(tam), 12)
# p-valor:
1 - pchisq(chisq(tam), 12)
# Região Crítica:
qchisq(0.95, 12)
